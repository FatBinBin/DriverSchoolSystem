<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bin.design.drivingschool.mapper.DssDrivingKnowledgeMapper">
  <resultMap id="BaseResultMap" type="com.bin.design.drivingschool.entity.DssDrivingKnowledge">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="KNOWLEDGE_TOPIC" jdbcType="VARCHAR" property="knowledgeTopic" />
    <result column="KNOWLEDGE_FROM" jdbcType="VARCHAR" property="knowledgeFrom" />
    <result column="KNOWLEDGE_CONTENT" jdbcType="VARCHAR" property="knowledgeContent" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.bin.design.drivingschool.entity.DssDrivingKnowledge">
    <result column="KNOWLEDGE_IMG" jdbcType="LONGVARCHAR" property="knowledgeImg" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, KNOWLEDGE_TOPIC, KNOWLEDGE_FROM, KNOWLEDGE_CONTENT, CREATE_TIME, UPDATE_TIME
  </sql>
  <sql id="Blob_Column_List">
    KNOWLEDGE_IMG
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dss_driving_knowledge
    where ID = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from dss_driving_knowledge
        ORDER BY CREATE_TIME DESC
    </select>
    <select id="selectByKey" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from dss_driving_knowledge
        where KNOWLEDGE_TOPIC like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
    </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dss_driving_knowledge
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bin.design.drivingschool.entity.DssDrivingKnowledge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dss_driving_knowledge (ID, KNOWLEDGE_TOPIC, KNOWLEDGE_FROM, 
      KNOWLEDGE_CONTENT, KNOWLEDGE_IMG)
    values (#{id,jdbcType=INTEGER}, #{knowledgeTopic,jdbcType=VARCHAR}, #{knowledgeFrom,jdbcType=VARCHAR}, 
      #{knowledgeContent,jdbcType=VARCHAR}, #{knowledgeImg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bin.design.drivingschool.entity.DssDrivingKnowledge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dss_driving_knowledge
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="knowledgeTopic != null">
        KNOWLEDGE_TOPIC,
      </if>
      <if test="knowledgeFrom != null">
        KNOWLEDGE_FROM,
      </if>
      <if test="knowledgeContent != null">
        KNOWLEDGE_CONTENT,
      </if>
      <if test="knowledgeImg != null">
        KNOWLEDGE_IMG,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="knowledgeTopic != null">
        #{knowledgeTopic,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeFrom != null">
        #{knowledgeFrom,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeContent != null">
        #{knowledgeContent,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeImg != null">
        #{knowledgeImg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bin.design.drivingschool.entity.DssDrivingKnowledge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dss_driving_knowledge
    <set>
      <if test="knowledgeTopic != null">
        KNOWLEDGE_TOPIC = #{knowledgeTopic,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeFrom != null">
        KNOWLEDGE_FROM = #{knowledgeFrom,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeContent != null">
        KNOWLEDGE_CONTENT = #{knowledgeContent,jdbcType=VARCHAR},
      </if>
      <if test="knowledgeImg != null">
        KNOWLEDGE_IMG = #{knowledgeImg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bin.design.drivingschool.entity.DssDrivingKnowledge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dss_driving_knowledge
    set KNOWLEDGE_TOPIC = #{knowledgeTopic,jdbcType=VARCHAR},
      KNOWLEDGE_FROM = #{knowledgeFrom,jdbcType=VARCHAR},
      KNOWLEDGE_CONTENT = #{knowledgeContent,jdbcType=VARCHAR},
      KNOWLEDGE_IMG = #{knowledgeImg,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bin.design.drivingschool.entity.DssDrivingKnowledge">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dss_driving_knowledge
    set KNOWLEDGE_TOPIC = #{knowledgeTopic,jdbcType=VARCHAR},
      KNOWLEDGE_FROM = #{knowledgeFrom,jdbcType=VARCHAR},
      KNOWLEDGE_CONTENT = #{knowledgeContent,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>