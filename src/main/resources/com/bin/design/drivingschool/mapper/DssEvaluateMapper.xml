<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bin.design.drivingschool.mapper.DssEvaluateMapper">
    <resultMap id="BaseResultMap" type="com.bin.design.drivingschool.entity.DssEvaluate">
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="COACH_ID" jdbcType="INTEGER" property="coachId"/>
        <result column="CONTENT" jdbcType="VARCHAR" property="content"/>
        <result column="TYPE" jdbcType="TINYINT" property="type"/>
        <result column="STATUS" jdbcType="TINYINT" property="status"/>
        <result column="SLOVE_CONTENT" jdbcType="VARCHAR" property="sloveContent"/>
        <result column="LEANER_ID" jdbcType="INTEGER" property="leanerId"/>
    </resultMap>
    <sql id="Base_Column_List">
    ID, COACH_ID, CONTENT, TYPE, LEANER_ID, STATUS, SLOVE_CONTENT
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from dss_evaluate
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByCoachId" parameterType="java.lang.Integer" resultType="map">
    select
    de.ID id, de.COACH_ID coachId, de.CONTENT content, de.TYPE type, de.LEANER_ID learnerId, dl.LEARNER_NAME learnerName
    from dss_evaluate de
    left join dss_learner_info dl on dl.ID = de.LEANER_ID
    where de.COACH_ID = #{coachId,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultType="map">
    select
    de.ID id, de.COACH_ID coachId, dc.COACH_NAME coachName, de.LEANER_ID learnerId, dl.LEARNER_NAME learnerName,  de.CONTENT content, de.TYPE type
    from dss_evaluate de
    left join dss_learner_info dl on dl.ID = de.LEANER_ID
		LEFT JOIN dss_coach_info dc on dc.ID = de.COACH_ID
  </select>
    <select id="selectAllEvaluate" resultType="map">
    select
    de.ID id, de.COACH_ID coachId, dc.COACH_NAME coachName,
    de.LEANER_ID learnerId, dl.LEARNER_NAME learnerName,
    de.CONTENT content, de.TYPE type
    from dss_evaluate de
    left join dss_learner_info dl on dl.ID = de.LEANER_ID
		LEFT JOIN dss_coach_info dc on dc.ID = de.COACH_ID
		where de.TYPE != 0
  </select>
    <select id="selectAllComplaint" resultType="map">
    select
    de.ID id, de.COACH_ID coachId, dc.COACH_NAME coachName,
    de.LEANER_ID learnerId, dl.LEARNER_NAME learnerName,
    de.CONTENT content, de.TYPE type, de.STATUS status, de.SLOVE_CONTENT sloveContent
    from dss_evaluate de
    left join dss_learner_info dl on dl.ID = de.LEANER_ID
		LEFT JOIN dss_coach_info dc on dc.ID = de.COACH_ID
		where de.TYPE =0
  </select>
    <select id="selectAllByKey" resultType="map">
    select
    de.ID id, de.COACH_ID coachId, dc.COACH_NAME coachName, de.LEANER_ID learnerId, dl.LEARNER_NAME learnerName,  de.CONTENT content, de.TYPE type
    from dss_evaluate de
    left join dss_learner_info dl on dl.ID = de.LEANER_ID
	LEFT JOIN dss_coach_info dc on dc.ID = de.COACH_ID
	where dl.LEARNER_NAME like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
    or dc.COACH_NAME like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
  </select>
    <select id="selectAllEvaluateByKey" resultType="map">
    select
    de.ID id, de.COACH_ID coachId, dc.COACH_NAME coachName, de.LEANER_ID learnerId, dl.LEARNER_NAME learnerName,  de.CONTENT content, de.TYPE type
    from dss_evaluate de
    left join dss_learner_info dl on dl.ID = de.LEANER_ID
	LEFT JOIN dss_coach_info dc on dc.ID = de.COACH_ID
	where dl.LEARNER_NAME like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
    or dc.COACH_NAME like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%') and de.TYPE != 0
  </select>
    <select id="selectAlComplaintByKey" resultType="map">
    select
    de.ID id, de.COACH_ID coachId, dc.COACH_NAME coachName,
     de.LEANER_ID learnerId, dl.LEARNER_NAME learnerName,
     de.CONTENT content, de.TYPE type, de.STATUS status, de.SLOVE_CONTENT sloveContent
    from dss_evaluate de
    left join dss_learner_info dl on dl.ID = de.LEANER_ID
	LEFT JOIN dss_coach_info dc on dc.ID = de.COACH_ID
	where dl.LEARNER_NAME like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
    or dc.COACH_NAME like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
    and de.TYPE = 0
  </select>
    <select id="selectByOrderCount" resultType="map">
    select  count(a.ID) NUM, a.*, b.*  from dss_coach_info a
    LEFT join dss_evaluate b on a.id = b.COACH_ID AND b.TYPE=1
    GROUP BY a.ID
    order by a.ORDER_COUNT desc LIMIT 5 ;
  </select>
    <select id="selectByEvaluateType" resultType="map">
    select count(*) NUM, a.COACH_ID, b.* from dss_evaluate a
    LEFT JOIN dss_coach_info b on a.COACH_ID = b.ID
    WHERE a.TYPE =1
    GROUP BY a.COACH_ID limit 5;
  </select>
    <select id="selectByLearner" resultType="map">
    SELECT e.LEANER_ID learnerId, e.COACH_ID coachId, e.ID id, e.CONTENT content,
     e.CREATE_TIME createTime, e.UPDATE_TIME updateTime, c.COACH_NAME coachName, TYPE type
     FROM dss_evaluate e LEFT JOIN dss_coach_info c ON e.COACH_ID = c.ID
     WHERE LEANER_ID = #{learnerId,jdbcType=INTEGER} AND e.TYPE != 0
  </select>
    <select id="selectComplaintByLearner" resultType="map">
    SELECT e.LEANER_ID learnerId, e.COACH_ID coachId, e.ID id, e.CONTENT content,
     e.CREATE_TIME createTime, e.UPDATE_TIME updateTime, c.COACH_NAME coachName,
     e.STATUS status, e.SLOVE_CONTENT sloveContent, TYPE type
     FROM dss_evaluate e LEFT JOIN dss_coach_info c ON e.COACH_ID = c.ID
     WHERE LEANER_ID = #{learnerId,jdbcType=INTEGER} AND e.TYPE = 0
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dss_evaluate
    where ID = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteBatchByPrimaryKey" parameterType="java.lang.Integer">
        delete from dss_evaluate
        where ID in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item,jdbcType=INTEGER}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.bin.design.drivingschool.entity.DssEvaluate">
    insert into dss_evaluate (ID, COACH_ID, CONTENT, 
      EVALUATE, LEANER_ID)
    values (#{id,jdbcType=INTEGER}, #{coachId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{evaluate,jdbcType=BIT}, #{leanerId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.bin.design.drivingschool.entity.DssEvaluate">
        insert into dss_evaluate
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="coachId != null">
                COACH_ID,
            </if>
            <if test="content != null">
                CONTENT,
            </if>
            <if test="type != null">
                TYPE,
            </if>
            <if test="leanerId != null">
                LEANER_ID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="coachId != null">
                #{coachId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="leanerId != null">
                #{leanerId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bin.design.drivingschool.entity.DssEvaluate">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dss_evaluate
        <set>
            <if test="coachId != null">
                COACH_ID = #{coachId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                CONTENT = #{content,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                TYPE = #{type,jdbcType=TINYINT},
            </if>
            <if test="leanerId != null">
                LEANER_ID = #{leanerId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=TINYINT},
            </if>
            <if test="sloveContent != null">
                SLOVE_CONTENT = #{sloveContent,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bin.design.drivingschool.entity.DssEvaluate">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update dss_evaluate
        set COACH_ID = #{coachId,jdbcType=INTEGER},
        CONTENT = #{content,jdbcType=VARCHAR},
        EVALUATE = #{evaluate,jdbcType=BIT},
        LEANER_ID = #{leanerId,jdbcType=INTEGER}
        where ID = #{id,jdbcType=INTEGER}
    </update>
</mapper>