<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bin.design.drivingschool.mapper.DssAppointmentDrivingMapper">
  <resultMap id="BaseResultMap" type="com.bin.design.drivingschool.entity.DssAppointmentDriving">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="APPOINTMENT_NAME" jdbcType="VARCHAR" property="appointmentName" />
    <result column="IDCARD" jdbcType="VARCHAR" property="idcard" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="STATUS" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, APPOINTMENT_NAME, IDCARD, PHONE, STATUS
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dss_appointment_driving
  </select>
  <select id="selectByKey"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dss_appointment_driving
    where APPOINTMENT_NAME like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
    or IDCARD like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
    or PHONE like CONCAT(CONCAT('%',#{key,jdbcType=VARCHAR}),'%')
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dss_appointment_driving
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dss_appointment_driving
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteBatchByPrimaryKey" parameterType="java.util.List">
    delete from dss_appointment_driving
    where ID in
    <foreach collection="list"  item="item" open="(" separator="," close=")"  >
      #{item,jdbcType=INTEGER}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.bin.design.drivingschool.entity.DssAppointmentDriving">
    insert into dss_appointment_driving (ID, APPOINTMENT_NAME, IDCARD, 
      PHONE, STATUS)
    values (#{id,jdbcType=INTEGER}, #{appointmentName,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.bin.design.drivingschool.entity.DssAppointmentDriving">
    insert into dss_appointment_driving
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="appointmentName != null">
        APPOINTMENT_NAME,
      </if>
      <if test="idcard != null">
        IDCARD,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appointmentName != null">
        #{appointmentName,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bin.design.drivingschool.entity.DssAppointmentDriving">
    update dss_appointment_driving
    <set>
      <if test="appointmentName != null">
        APPOINTMENT_NAME = #{appointmentName,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        IDCARD = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bin.design.drivingschool.entity.DssAppointmentDriving">
    update dss_appointment_driving
    set APPOINTMENT_NAME = #{appointmentName,jdbcType=VARCHAR},
      IDCARD = #{idcard,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=TINYINT}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>